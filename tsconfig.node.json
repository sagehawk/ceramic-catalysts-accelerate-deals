// tsconfig.node.json
{
  "compilerOptions": {
    "composite": true,             // Recommended for project references
    "skipLibCheck": true,
    "module": "ESNext",            // CRITICAL: Output ES Module syntax
    "moduleResolution": "NodeNext",  // CRITICAL: Use Node.js's ESM resolution
    "target": "ES2022",            // Or a recent ES version supported by Node on Vercel
    "allowSyntheticDefaultImports": true, // Often helpful
    "esModuleInterop": true,       // Enables 'import foo from "bar"' for CJS modules
    "resolveJsonModule": true,     // Allows importing .json files
    "isolatedModules": true,       // Good practice for transpilers
    "strict": true,
    "noUnusedLocals": false,       // Your preference
    "noUnusedParameters": false,   // Your preference
    "forceConsistentCasingInFileNames": true,
    
    "noEmit": false,               // CRITICAL: MUST BE FALSE to output JavaScript files

    // You can specify an outDir, though Vercel might manage outputs internally.
    // Having it can be good for local builds or understanding.
    // "outDir": "dist/server", 

    // If your server code uses paths, define them here or inherit from root.
    // "baseUrl": ".",
    // "paths": {
    //   "@/*": ["./src/*"] // Only if your API code uses these and they point to relevant server files
    // }
  },
  "include": [
    "api/**/*.ts"              // CRITICAL: This tells TSC to compile all .ts files in the 'api' directory using these settings
    // "vite.config.ts"        // Include if your vite.config.ts is TypeScript and needs these Node settings
  ],
  "exclude": [
    "node_modules",
    // "dist",                 // If you use an outDir
    "src"                     // Exclude frontend source, handled by tsconfig.app.json
  ]
}